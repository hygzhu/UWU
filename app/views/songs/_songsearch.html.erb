

<%#
  Filterrific adds the `form_for_filterrific` view helper:
  * adds dom id 'filterrific_filter'
  * applies javascript behaviors:
      * AJAX form submission on change
      * AJAX spinner while AJAX request is being processed
  * sets form_for options like :url, :method and input name prefix
%>
<%= form_for_filterrific @filterrific,html: { id: 'filterrific-no-ajax-auto-submit', autocomplete: "off" } do |f| %>
  <div class="card card-body bg-light">
    <div class="row">
  <div class="col-md-3">
    Search
    <%# give the search field the 'filterrific-periodically-observed' class for live updates %>
    <%= f.text_field(
      :search_query,
      class: 'filterrific-periodically-observed form-control'
    ) %>
  </div>
  <div class="col-md-3">
    Sorted by
    <%= f.select(:sorted_by, @filterrific.select_options[:sorted_by], {}, 
      class: 'form-control') %>
  </div>

  <div class="col-md-2">
    Filter
    <%= f.submit 'Filter',:method => :get, class: "btn btn-primary" %>
  </div>
  

  <div class="col-md-2">
  Reset filters<%= link_to "Reset filters", reset_filterrific_url, :class => 'btn btn-primary' %>
  </div>
</div>
  </div>
<% end %>

<table class="table">
  <tr>
    <th>
      Source
    </th>
    <th>Song Type</th>
    <th>Song Title</th>
    <th>Song Artist</th>
    <th>Source Period</th>
    <th>Popularity <%# filterrific_sorting_link(@filterrific, :popularity) %></th>
    <th>Actions</th>
  </tr>

<%= render @songs%>

</table>


<div class="panel">
      <%= page_entries_info @songs, :model => 'song' %>
</div>

 <%= will_paginate @songs %>
